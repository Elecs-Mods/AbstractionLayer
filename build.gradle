buildscript {
    repositories {
        mavenCentral()
		jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
	maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
	maven {
		url "http://dvs1.progwml6.com/files/maven"
    } 
	maven {
		url "http://maven.amadornes.com/"
	}
	maven {
        name = "forestry"
        url = "http://maven.ic2.player.to/"
    }
	maven {
		url "http://tehnut.info/maven"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}"//-${config.mod_version}." + (System.env.DRONE_BUILD_NUMBER ?: "localBuild")
group= "elec332.abstraction" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AbstractionLayer"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"
		
	mappings = config.mappings
	
	useDepAts = true
}

dependencies {

	//WAILA
	//compile "mcp.mobius.waila:Waila:${config.WAILA_version}"
	//compile "mcp.mobius.waila:Waila:${config.WAILA_version}"//_${config.minecraft_version}"
	//deobfCompile "mcp.mobius.waila:Hwyla:${config.WAILA_version}"
	
	//JEI
	//deobfCompile "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
	
	//MCMP
	//deobfCompile "MCMultiPart:MCMultiPart-experimental:${config.mcmp_version}:universal"
	
	//Forestry
	//deobfCompile "net.sengir.forestry:forestry_${config.minecraft_version}:${config.forestry_version}"
	//deobfCompile "net.sengir.forestry:forestry_${config.forestry_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", config.mod_version
    inputs.property "mcversion", config.minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        //include 'mcmod.info'
                
        // replace version and mcversion
//        expand 'version':(config.mod_version+"."+(System.env.DRONE_BUILD_NUMBER ?: "9999.custom")), 'mcversion':config.minecraft_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
      //  exclude 'mcmod.info'
    }
}

jar {
    manifest {
         //'FMLCorePlugin': 'elec332.core.loader.ElecCoreLoader',
                   //'FMLCorePluginContainsFMLMod': 'true',
		//attributes		   'FMLAT': 'eleccore_at.cfg'
	}
}


tasks.build.dependsOn('deobfJar')

task deobfJar(type: Jar) { // Generate deobfuscated
	//version = "Newest"
    from sourceSets.main.output
    classifier = 'deobf'
}
